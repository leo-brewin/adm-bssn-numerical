--! ------------------------------------------------------------
--!  Do not edit this file, it was created by ada-merge from:
--!     bssnbase-time_derivs.adt
--! ------------------------------------------------------------
-- src: ./bssnbase-time_derivs.adt
package body BSSNBase.Time_Derivs is

   dxdx, dydy, dzdz : Real;
   two_dx, two_dy, two_dz : Real;
   four_dxdy, four_dxdz, four_dydz : Real;

   procedure set_time_derivatives (point : GridPoint) is

-- beg: ./include/local-data.ad --------------------------------------------------------------------
   -- these are local variables used by the basic codes such as dot-gab.ad, dot-kab.ad etc.
   -- renames are good as they don't involve a memory copy

   ----------------------------------------------------------------------
   -- basic local data

   N         : Real;                                     -- lapse
   phi       : Real;                                     -- conformal factor
   trK       : Real;                                     -- trace of K
   Gi        : GammaPointArray;                          -- trace of conformal connection, GammaBar^{i}
   gBar      : MetricPointArray;                         -- gBar_{ab}
   iBar      : MetricPointArray;                         -- gBar^{ab}
   ABar      : ExtcurvPointArray;                        -- ABar_{ab}
   BBar      : ExtcurvPointArray;                        -- ABar^{ab}

   ----------------------------------------------------------------------
   -- time derivatives of local data

   dot_N     : Real;
   dot_phi   : Real;
   dot_trK   : Real;
   dot_Gi    : GammaPointArray;
   dot_gBar  : MetricPointArray;
   dot_ABar  : ExtcurvPointArray;

   ----------------------------------------------------------------------
   -- partial derivatives of local data

   d1N       : Array (1..3) of Real;                     -- 1st & 2nd derivs of N
   d2N       : Array (symmetric) of Real;

   d1phi     : Array (1..3) of Real;                     -- 1st & 2nd derivs of phi
   d2phi     : Array (symmetric) of Real;

   d1trK     : Array (1..3) of Real;                     -- 1st derivs of trK

   d1Gi      : Array (1..3) of GammaPointArray;          -- 1st derivs of GammaBar^i

   d1gBar    : Array (1..3) of MetricPointArray;         -- 1st & 2nd derivs of gBar_{ab}
   d2gBar    : Array (symmetric) of MetricPointArray;

   d1iBar    : Array (1..3) of MetricPointArray;         -- 1st derivs of gBar^{ab}

   d1ABar    : Array (1..3) of ExtcurvPointArray;        -- 1st derivs of ABar_{ab}

   ----------------------------------------------------------------------
   -- miscellaneous data

   R         : Real;                                     -- Ricci scalar
   Rab       : Array (symmetric) of Real;                -- Ricci tensor

   ----------------------------------------------------------------------
   -- constraints

   Ham       : Real;                                     -- Hamiltonian constraint
   Mom       : MomConstraintPointArray;                  -- Momentum constraints

   ----------------------------------------------------------------------
   -- mappings between the Cadabra and Ada objects
   -- LCB: the following renames could be eliminated by using a set of sed-scripts
   --      to substitute the symbols in the foo.ad files

   -- \partial_{a}{\phi} --> dphi_{a} --> phia --> phi_a --> d1phi (a)

   phi_x : Real renames d1phi (1);
   phi_y : Real renames d1phi (2);
   phi_z : Real renames d1phi (3);

   -- \partial_{a b}{\phi} --> dphi_{a b} --> phiab --> phi_ab --> d2phi (ab)

   phi_xx : Real renames d2phi (xx);
   phi_xy : Real renames d2phi (xy);
   phi_xz : Real renames d2phi (xz);
   phi_yy : Real renames d2phi (yy);
   phi_yz : Real renames d2phi (yz);
   phi_zz : Real renames d2phi (zz);

   -- \partial_{a}{trK} --> d1trK_{a} --> trKa --> trK_a --> d1trK (a)

   trK_x : Real renames d1trK (1);
   trK_y : Real renames d1trK (2);
   trK_z : Real renames d1trK (3);

   -- GammaBar^{a} --> Gia --> Gi_a --> Gi (a)

   Gi_x : Real renames Gi (1);
   Gi_y : Real renames Gi (2);
   Gi_z : Real renames Gi (3);

   -- \partial_{a}{GammaBar^{b}} --> dGi^{b}_{a} --> Giba --> Gi_ba --> d1Gi (a)(b)

   Gi_xx : Real renames d1Gi (1)(1);
   Gi_xy : Real renames d1Gi (2)(1);
   Gi_xz : Real renames d1Gi (3)(1);

   Gi_yx : Real renames d1Gi (1)(2);
   Gi_yy : Real renames d1Gi (2)(2);
   Gi_yz : Real renames d1Gi (3)(2);

   Gi_zx : Real renames d1Gi (1)(3);
   Gi_zy : Real renames d1Gi (2)(3);
   Gi_zz : Real renames d1Gi (3)(3);

   -- \partial_{a}{N} --> dN_{a} --> Na --> N_a --> d1N (a)

   N_x : Real renames d1N (1);
   N_y : Real renames d1N (2);
   N_z : Real renames d1N (3);

   -- \partial_{a b}{N} --> dN_{a b} --> Nab --> N_ab --> d2N (ab)

   N_xx : Real renames d2N (xx);
   N_xy : Real renames d2N (xy);
   N_xz : Real renames d2N (xz);
   N_yy : Real renames d2N (yy);
   N_yz : Real renames d2N (yz);
   N_zz : Real renames d2N (zz);

   -- R_{a b} --> Rab --> Rab (ab)

   Rxx : Real renames Rab (xx);
   Rxy : Real renames Rab (xy);
   Rxz : Real renames Rab (xz);
   Ryy : Real renames Rab (yy);
   Ryz : Real renames Rab (yz);
   Rzz : Real renames Rab (zz);

   -- ABar_{a b} --> ABarab --> ABar_ab --> ABar (ab)

   ABar_xx : Real Renames ABar (xx);
   ABar_xy : Real Renames ABar (xy);
   ABar_xz : Real Renames ABar (xz);
   ABar_yy : Real Renames ABar (yy);
   ABar_yz : Real Renames ABar (yz);
   ABar_zz : Real Renames ABar (zz);

   -- ABar^{a b} --> BBarab --> BBar_ab --> BBar (ab)

   BBar_xx : Real Renames BBar (xx);
   BBar_xy : Real Renames BBar (xy);
   BBar_xz : Real Renames BBar (xz);
   BBar_yy : Real Renames BBar (yy);
   BBar_yz : Real Renames BBar (yz);
   BBar_zz : Real Renames BBar (zz);

   -- gBar_{a b} --> gBarab --> gBar_ab --> gBar (ab)

   gBar_xx : Real Renames gBar (xx);
   gBar_xy : Real Renames gBar (xy);
   gBar_xz : Real Renames gBar (xz);
   gBar_yy : Real Renames gBar (yy);
   gBar_yz : Real Renames gBar (yz);
   gBar_zz : Real Renames gBar (zz);

   -- gBar^{a b} --> iBarab --> iBar_ab --> iBar (ab)

   iBar_xx : Real renames iBar (xx);
   iBar_xy : Real renames iBar (xy);
   iBar_xz : Real renames iBar (xz);
   iBar_yy : Real renames iBar (yy);
   iBar_yz : Real renames iBar (yz);
   iBar_zz : Real renames iBar (zz);

   -- \partial_{a}{gBar_{b c}} --> dgBar_{b c a} --> gBarbca --> gBar_bca --> d1gBar(a)(bc)

   gBar_xxx : Real renames d1gBar (1)(xx);
   gBar_xxy : Real renames d1gBar (2)(xx);
   gBar_xxz : Real renames d1gBar (3)(xx);

   gBar_xyx : Real renames d1gBar (1)(xy);
   gBar_xyy : Real renames d1gBar (2)(xy);
   gBar_xyz : Real renames d1gBar (3)(xy);

   gBar_xzx : Real renames d1gBar (1)(xz);
   gBar_xzy : Real renames d1gBar (2)(xz);
   gBar_xzz : Real renames d1gBar (3)(xz);

   gBar_yyx : Real renames d1gBar (1)(yy);
   gBar_yyy : Real renames d1gBar (2)(yy);
   gBar_yyz : Real renames d1gBar (3)(yy);

   gBar_yzx : Real renames d1gBar (1)(yz);
   gBar_yzy : Real renames d1gBar (2)(yz);
   gBar_yzz : Real renames d1gBar (3)(yz);

   gBar_zzx : Real renames d1gBar (1)(zz);
   gBar_zzy : Real renames d1gBar (2)(zz);
   gBar_zzz : Real renames d1gBar (3)(zz);

   -- \partial_{a}{gBar^{b c}} --> dgBar^{b c}_{a} --> iBarbca --> iBar_bca --> d1iBar(a)(bc)

   iBar_xxx : Real renames d1iBar (1)(xx);
   iBar_xxy : Real renames d1iBar (2)(xx);
   iBar_xxz : Real renames d1iBar (3)(xx);

   iBar_xyx : Real renames d1iBar (1)(xy);
   iBar_xyy : Real renames d1iBar (2)(xy);
   iBar_xyz : Real renames d1iBar (3)(xy);

   iBar_xzx : Real renames d1iBar (1)(xz);
   iBar_xzy : Real renames d1iBar (2)(xz);
   iBar_xzz : Real renames d1iBar (3)(xz);

   iBar_yyx : Real renames d1iBar (1)(yy);
   iBar_yyy : Real renames d1iBar (2)(yy);
   iBar_yyz : Real renames d1iBar (3)(yy);

   iBar_yzx : Real renames d1iBar (1)(yz);
   iBar_yzy : Real renames d1iBar (2)(yz);
   iBar_yzz : Real renames d1iBar (3)(yz);

   iBar_zzx : Real renames d1iBar (1)(zz);
   iBar_zzy : Real renames d1iBar (2)(zz);
   iBar_zzz : Real renames d1iBar (3)(zz);

   -- \partial_{a}{ABar_{b c}} --> dABar_{b c a} --> ABarbca --> ABar_bca --> d1ABar(a)(bc)

   ABar_xxx : Real renames d1ABar (1)(xx);
   ABar_xxy : Real renames d1ABar (2)(xx);
   ABar_xxz : Real renames d1ABar (3)(xx);

   ABar_xyx : Real renames d1ABar (1)(xy);
   ABar_xyy : Real renames d1ABar (2)(xy);
   ABar_xyz : Real renames d1ABar (3)(xy);

   ABar_xzx : Real renames d1ABar (1)(xz);
   ABar_xzy : Real renames d1ABar (2)(xz);
   ABar_xzz : Real renames d1ABar (3)(xz);

   ABar_yyx : Real renames d1ABar (1)(yy);
   ABar_yyy : Real renames d1ABar (2)(yy);
   ABar_yyz : Real renames d1ABar (3)(yy);

   ABar_yzx : Real renames d1ABar (1)(yz);
   ABar_yzy : Real renames d1ABar (2)(yz);
   ABar_yzz : Real renames d1ABar (3)(yz);

   ABar_zzx : Real renames d1ABar (1)(zz);
   ABar_zzy : Real renames d1ABar (2)(zz);
   ABar_zzz : Real renames d1ABar (3)(zz);

   -- \partial_{a b}{gBar_{c d}} --> dgBar_{c d a b} --> gBarcdab --> gBar_cdab --> d2gBar(ab)(cd)

   gBar_xxxx : Real renames d2gBar (xx)(xx);
   gBar_xyxx : Real renames d2gBar (xx)(xy);
   gBar_xzxx : Real renames d2gBar (xx)(xz);
   gBar_yyxx : Real renames d2gBar (xx)(yy);
   gBar_yzxx : Real renames d2gBar (xx)(yz);
   gBar_zzxx : Real renames d2gBar (xx)(zz);

   gBar_xxxy : Real renames d2gBar (xy)(xx);
   gBar_xyxy : Real renames d2gBar (xy)(xy);
   gBar_xzxy : Real renames d2gBar (xy)(xz);
   gBar_yyxy : Real renames d2gBar (xy)(yy);
   gBar_yzxy : Real renames d2gBar (xy)(yz);
   gBar_zzxy : Real renames d2gBar (xy)(zz);

   gBar_xxxz : Real renames d2gBar (xz)(xx);
   gBar_xyxz : Real renames d2gBar (xz)(xy);
   gBar_xzxz : Real renames d2gBar (xz)(xz);
   gBar_yyxz : Real renames d2gBar (xz)(yy);
   gBar_yzxz : Real renames d2gBar (xz)(yz);
   gBar_zzxz : Real renames d2gBar (xz)(zz);

   gBar_xxyy : Real renames d2gBar (yy)(xx);
   gBar_xyyy : Real renames d2gBar (yy)(xy);
   gBar_xzyy : Real renames d2gBar (yy)(xz);
   gBar_yyyy : Real renames d2gBar (yy)(yy);
   gBar_yzyy : Real renames d2gBar (yy)(yz);
   gBar_zzyy : Real renames d2gBar (yy)(zz);

   gBar_xxyz : Real renames d2gBar (yz)(xx);
   gBar_xyyz : Real renames d2gBar (yz)(xy);
   gBar_xzyz : Real renames d2gBar (yz)(xz);
   gBar_yyyz : Real renames d2gBar (yz)(yy);
   gBar_yzyz : Real renames d2gBar (yz)(yz);
   gBar_zzyz : Real renames d2gBar (yz)(zz);

   gBar_xxzz : Real renames d2gBar (zz)(xx);
   gBar_xyzz : Real renames d2gBar (zz)(xy);
   gBar_xzzz : Real renames d2gBar (zz)(xz);
   gBar_yyzz : Real renames d2gBar (zz)(yy);
   gBar_yzzz : Real renames d2gBar (zz)(yz);
   gBar_zzzz : Real renames d2gBar (zz)(zz);
-- end: ./include/local-data.ad --------------------------------------------------------------------

-- beg: ./cadabra/ricci.ad -------------------------------------------------------------------------
Procedure set_3d_ricci is
   x0,   x1,   x2,   x3,   x4,   x5,   x6,   x7,   x8,   x9,   x10,  x11,  x12,  x13,  
   x14,  x15,  x16,  x17,  x18,  x19,  x20,  x21,  x22,  x23,  x24,  x25,  x26,  x27,  
   x28,  x29,  x30,  x31,  x32,  x33,  x34,  x35,  x36,  x37,  x38,  x39,  x40,  x41,  
   x42,  x43,  x44,  x45,  x46,  x47,  x48,  x49,  x50,  x51,  x52,  x53,  x54,  x55,  
   x56,  x57,  x58,  x59,  x60,  x61,  x62,  x63,  x64,  x65,  x66,  x67,  x68,  x69,  
   x70,  x71,  x72,  x73,  x74,  x75,  x76,  x77,  x78,  x79,  x80,  x81,  x82,  x83,  
   x84,  x85,  x86,  x87,  x88,  x89,  x90,  x91,  x92,  x93,  x94,  x95,  x96,  x97,  
   x98,  x99,  x100, x101, x102, x103, x104, x105, x106, x107, x108, x109, x110, x111, 
   x112, x113, x114, x115, x116, x117, x118, x119, x120, x121, x122, x123, x124, x125, 
   x126, x127, x128, x129, x130, x131, x132, x133, x134, x135, x136, x137, x138, x139, 
   x140, x141, x142, x143, x144, x145, x146, x147, x148, x149, x150, x151, x152, x153, 
   x154, x155, x156, x157, x158, x159, x160, x161, x162, x163, x164, x165, x166, x167, 
   x168, x169, x170, x171, x172, x173, x174, x175, x176, x177, x178, x179, x180, x181, 
   x182, x183, x184, x185, x186, x187, x188, x189, x190, x191, x192, x193, x194, x195, 
   x196, x197, x198, x199, x200, x201, x202, x203, x204, x205, x206, x207, x208, x209, 
   x210, x211, x212, x213, x214, x215, x216, x217, x218, x219, x220, x221, x222, x223, 
   x224, x225, x226, x227, x228, x229, x230, x231, x232, x233, x234, x235, x236, x237, 
   x238, x239, x240, x241, x242, x243, x244, x245, x246, x247, x248, x249, x250 : Real;
   x251, x252, x253, x254, x255, x256, x257, x258, x259, x260, x261, x262, x263, x264, 
   x265, x266, x267, x268, x269, x270, x271, x272, x273 : Real;
begin
   x0   := 2.0*phi_xx;
   x1   := (1.0/2.0)*iBar_xx;
   x2   := (1.0/2.0)*iBar_yy;
   x3   := (1.0/2.0)*iBar_zz;
   x4   := (1.0/2.0)*gBar_xyx;
   x5   := (1.0/2.0)*iBar_xzx;
   x6   := (1.0/4.0)*iBar_yyx;
   x7   := (1.0/2.0)*iBar_yzx;
   x8   := (1.0/4.0)*iBar_zzx;
   x9   := iBar_xx*phi_x;
   x10  := iBar_xy*phi_y;
   x11  := iBar_xz*phi_z;
   x12  := 12.0*(phi_x ** 2);
   x13  := gBar_xx*iBar_xx;
   x14  := 4.0*gBar_xx;
   x15  := iBar_xy*phi_xy;
   x16  := iBar_xz*phi_xz;
   x17  := 2.0*phi_yy;
   x18  := gBar_xx*iBar_yy;
   x19  := iBar_yz*phi_yz;
   x20  := 2.0*phi_zz;
   x21  := gBar_xx*iBar_zz;
   x22  := iBar_xy*phi_x;
   x23  := iBar_yy*phi_y;
   x24  := iBar_yz*phi_z;
   x25  := iBar_xz*phi_x;
   x26  := iBar_yz*phi_y;
   x27  := iBar_zz*phi_z;
   x28  := 2.0*gBar_xyx;
   x29  := 2.0*gBar_xzx;
   x30  := gBar_xxy*iBar_yz;
   x31  := iBar_xx*x30;
   x32  := gBar_xyz*iBar_xy;
   x33  := gBar_xxy*iBar_xz;
   x34  := gBar_xzx*iBar_xy;
   x35  := iBar_yy*x33;
   x36  := gBar_xxz*iBar_xz;
   x37  := gBar_xyx*iBar_xy;
   x38  := gBar_xxz*iBar_zz;
   x39  := gBar_xzy*iBar_yz;
   x40  := gBar_xyz*iBar_xz;
   x41  := gBar_xyx*iBar_yy;
   x42  := gBar_xzx*iBar_yz;
   x43  := gBar_xyx*iBar_xx;
   x44  := (iBar_xy ** 2);
   x45  := gBar_xxy*gBar_xyx;
   x46  := (iBar_xz ** 2);
   x47  := gBar_xxz*gBar_xzx;
   x48  := (iBar_yz ** 2);
   x49  := gBar_xyz*gBar_xzy;
   x50  := 24.0*gBar_xx;
   x51  := phi_x*x50;
   x52  := phi_y*x24;
   x53  := iBar_xx*iBar_yy;
   x54  := gBar_xzy*iBar_xy;
   x55  := gBar_xxz*iBar_yz;
   x56  := gBar_xyz*iBar_yz;
   x57  := iBar_xx*iBar_zz;
   x58  := gBar_xyx*iBar_yz;
   x59  := gBar_xyx*iBar_xz;
   x60  := gBar_xzy*iBar_xz;
   x61  := iBar_zz*x32;
   x62  := iBar_yy*iBar_zz;
   x63  := gBar_xzx*x39;
   x64  := iBar_xxx + iBar_xyy + iBar_xzz;
   x65  := (1.0/2.0)*gBar_xxx;
   x66  := iBar_xyx + iBar_yyy + iBar_yzz;
   x67  := (1.0/2.0)*gBar_xxy;
   x68  := iBar_xzx + iBar_yzy + iBar_zzz;
   x69  := (1.0/2.0)*gBar_xxz;
   x70  := 12.0*(phi_y ** 2);
   x71  := 12.0*(phi_z ** 2);
   x72  := (gBar_xxy ** 2);
   x73  := iBar_yy*x1;
   x74  := (gBar_xxz ** 2);
   x75  := iBar_zz*x1;
   x76  := (gBar_xyx ** 2);
   x77  := (gBar_xyz ** 2);
   x78  := iBar_zz*x2;
   x79  := (gBar_xzx ** 2);
   x80  := (gBar_xzy ** 2);
   x81  := (1.0/2.0)*x44;
   x82  := (1.0/2.0)*x46;
   x83  := (1.0/2.0)*x48;
   x84  := 2.0*gBar_xx;
   x85  := phi_x*x64;
   x86  := phi_y*x66;
   x87  := phi_z*x68;
   x88  := (1.0/2.0)*gBar_xzx;
   x89  := (1.0/4.0)*iBar_xxx;
   x90  := (1.0/2.0)*gBar_xy;
   x91  := (1.0/2.0)*gBar_xx;
   x92  := (1.0/2.0)*Gi_yx;
   x93  := (1.0/2.0)*Gi_zx;
   x94  := (1.0/2.0)*gBar_xz;
   x95  := 12.0*phi_x;
   x96  := (1.0/2.0)*gBar_xyy;
   x97  := (1.0/2.0)*gBar_xyz;
   x98  := (1.0/2.0)*gBar_xzy;
   x99  := (1.0/2.0)*gBar_xzz;
   x100 := (1.0/2.0)*iBar_xyx;
   x101 := (1.0/2.0)*gBar_yzz;
   x102 := gBar_yyx*x44;
   x103 := gBar_yzx*x46;
   x104 := gBar_xyy*x44;
   x105 := gBar_xzx*x82;
   x106 := gBar_xyz*x83;
   x107 := gBar_xzy*x83;
   x108 := iBar_xy*x3;
   x109 := gBar_xy*iBar_xx;
   x110 := gBar_xy*iBar_yy;
   x111 := gBar_xy*iBar_zz;
   x112 := 4.0*gBar_xy;
   x113 := 2.0*gBar_xy;
   x114 := x46*x69;
   x115 := (1.0/2.0)*iBar_yz;
   x116 := iBar_xz*x115;
   x117 := gBar_xxy*x73;
   x118 := x1*x30;
   x119 := gBar_yyz*iBar_yz;
   x120 := iBar_xy*x67;
   x121 := gBar_yzx*iBar_xz;
   x122 := iBar_xy*x121;
   x123 := iBar_xz*iBar_yy;
   x124 := x123*x67;
   x125 := x1*x55;
   x126 := gBar_xxz*x75;
   x127 := gBar_yyx*iBar_xy;
   x128 := iBar_xz*x69;
   x129 := iBar_xy*iBar_zz;
   x130 := gBar_yyz*x129;
   x131 := gBar_yzy*iBar_yz;
   x132 := iBar_xz*x32;
   x133 := gBar_xyx*x73;
   x134 := x2*x59;
   x135 := x1*x58;
   x136 := iBar_xy*x4;
   x137 := gBar_xyy*x2;
   x138 := gBar_yyx*x2;
   x139 := gBar_xyz*x78;
   x140 := iBar_yz*x97;
   x141 := x1*x42;
   x142 := iBar_xz*x88;
   x143 := gBar_xzx*x75;
   x144 := x3*x34;
   x145 := iBar_yz*x98;
   x146 := gBar_yzx*x3;
   x147 := gBar_xzy*x78;
   x148 := 24.0*gBar_xy;
   x149 := phi_x*x148;
   x150 := gBar_xyy*iBar_xy;
   x151 := x1*x56;
   x152 := iBar_xy*x39;
   x153 := Gi_xx*x90 + Gi_xy*x91 + Gi_yy*x90 + Gi_zy*x94 + gBar_xxy*x10 + gBar_xxy*x11 + gBar_xxy*x9 - gBar_xyx*x151 - gBar_xyxx*x1 - gBar_xyxy*iBar_xy - gBar_xyxz*iBar_xz + gBar_xyy*x117 + gBar_xyy*x125 - gBar_xyy*x133 - gBar_xyy*x141 - gBar_xyyy*x2 - gBar_xyyz*iBar_yz + gBar_xyz*x105 
         - gBar_xyz*x114 + gBar_xyz*x118 + gBar_xyz*x126 - gBar_xyz*x143 - gBar_xyz*x25 - gBar_xyz*x26 - gBar_xyz*x27 - gBar_xyz*x5 - gBar_xyzz*x3 + gBar_xzy*x25 + gBar_xzy*x26 + gBar_xzy*x27 + gBar_yy*x92 - gBar_yyx*x100 - gBar_yyx*x117 - gBar_yyx*x125 + gBar_yyx*x133 
         + gBar_yyx*x141 + gBar_yyx*x22 + gBar_yyx*x23 + gBar_yyx*x24 - gBar_yyz*x106 + gBar_yyz*x107 - gBar_yyz*x124 + gBar_yyz*x134 + gBar_yyz*x139 - gBar_yyz*x144 - gBar_yyz*x147 - gBar_yyz*x7 + gBar_yz*x93 - gBar_yzx*x105 - gBar_yzx*x118 - gBar_yzx*x126 + gBar_yzx*x135 
         + gBar_yzx*x143 + gBar_yzx*x25 + gBar_yzx*x26 + gBar_yzx*x27 - gBar_yzx*x5 + gBar_yzy*x106 - gBar_yzy*x107 + gBar_yzy*x124 - gBar_yzy*x129*x69 - gBar_yzy*x134 - gBar_yzy*x139 + gBar_yzy*x144 + gBar_yzy*x147 - iBar_xxx*x4 - iBar_xyy*x67 + iBar_xz*x34*x96 - iBar_xzy*x69 
         - iBar_yyy*x96 + iBar_yz*x32*x96 - iBar_yzy*x97 - iBar_yzy*x98 - iBar_zzx*x101 - iBar_zzy*x99 - 2.0*phi_xy + phi_y*x95 - x0*x109 - x10*x149 - x102*x4 + x102*x67 + x103*x69 + x104*x4 - x104*x67 - x108*x49 + x108*x77 - x109*x12 - x11*x149 - x110*x17 - x110*x70 
         - x111*x20 - x111*x71 - x112*x15 - x112*x16 - x112*x19 - x113*x85 - x113*x86 - x113*x87 + x116*x49 - x116*x77 + x119*x120 - x119*x128 - x119*x136 + x119*x142 - x120*x131 + x121*x140 - x121*x145 - x122*x4 + x122*x67 + x127*x128 - x127*x140 - x127*x142 
         + x127*x145 + x128*x131 - x128*x150 + x130*x69 + x131*x136 - x131*x142 + x132*x4 - x132*x67 - x137*x40 + x137*x60 + x138*x40 - x138*x60 - x146*x32 + x146*x54 - x148*x52 - x152*x96 - x4*x64 - x66*x96 - x68*x97;
   x154 := (1.0/2.0)*iBar_yyx;
   x155 := gBar_yzx*x44;
   x156 := gBar_zzx*x46;
   x157 := gBar_xzy*x44;
   x158 := iBar_xz*x2;
   x159 := gBar_xz*iBar_xx;
   x160 := gBar_xz*iBar_yy;
   x161 := gBar_xz*iBar_zz;
   x162 := 4.0*gBar_xz;
   x163 := 2.0*gBar_xz;
   x164 := iBar_xy*x115;
   x165 := gBar_yzz*iBar_yz;
   x166 := iBar_xy*iBar_xz;
   x167 := x166*x67;
   x168 := x1*x39;
   x169 := gBar_yzz*x129;
   x170 := gBar_zzy*iBar_yz;
   x171 := x166*x4;
   x172 := x3*x32;
   x173 := gBar_yzx*x2;
   x174 := gBar_zzx*iBar_xz;
   x175 := gBar_xzz*iBar_xz;
   x176 := gBar_yzx*iBar_yz;
   x177 := iBar_xy*x176;
   x178 := x3*x54;
   x179 := 24.0*gBar_xz;
   x180 := phi_x*x179;
   x181 := gBar_zzy*x129;
   x182 := Gi_xx*x94 + Gi_xz*x91 + Gi_yz*x90 + Gi_zz*x94 + gBar_xxz*x10 + gBar_xxz*x11 + gBar_xxz*x168 + gBar_xxz*x9 + gBar_xyz*x22 + gBar_xyz*x23 + gBar_xyz*x24 - gBar_xzxx*x1 - gBar_xzxy*iBar_xy - gBar_xzxz*iBar_xz + gBar_xzy*x117 - gBar_xzy*x133 - gBar_xzy*x22 - gBar_xzy*x23 
         - gBar_xzy*x24 - gBar_xzyy*x2 - gBar_xzyz*iBar_yz + gBar_xzz*x105 - gBar_xzz*x114 + gBar_xzz*x118 + gBar_xzz*x126 - gBar_xzz*x135 - gBar_xzz*x143 - gBar_xzz*x167 + gBar_xzz*x171 + gBar_xzz*x172 - gBar_xzz*x178 - gBar_xzzz*x3 + gBar_yz*x92 - gBar_yzx*x100 - gBar_yzx*x117 
         - gBar_yzx*x125 + gBar_yzx*x133 + gBar_yzx*x141 + gBar_yzx*x22 + gBar_yzx*x23 + gBar_yzx*x24 - gBar_yzy*x154 - gBar_yzz*x106 + gBar_yzz*x107 - gBar_yzz*x124 + gBar_yzz*x134 + gBar_yzz*x139 - gBar_yzz*x144 - gBar_yzz*x147 + gBar_zz*x93 - gBar_zzx*x105 - gBar_zzx*x118 
         - gBar_zzx*x126 + gBar_zzx*x135 + gBar_zzx*x143 + gBar_zzx*x167 - gBar_zzx*x171 - gBar_zzx*x172 + gBar_zzx*x178 + gBar_zzx*x25 + gBar_zzx*x26 + gBar_zzx*x27 - gBar_zzx*x5 + gBar_zzy*x106 - gBar_zzy*x107 + gBar_zzy*x124 - gBar_zzy*x134 - gBar_zzy*x139 + gBar_zzy*x144 
         + gBar_zzy*x147 - gBar_zzy*x7 - iBar_xxx*x88 - iBar_xyx*x98 - iBar_xyz*x67 - iBar_xzz*x69 - iBar_yyz*x96 - iBar_yzz*x97 - iBar_yzz*x98 - iBar_zzz*x99 - 2.0*phi_xz + phi_z*x95 - x0*x159 - x1*x63 - x10*x180 - x11*x180 - x12*x159 + x120*x165 - x120*x170 + x122*x69 
         - x122*x88 - x128*x165 + x128*x170 - x128*x54 - x136*x165 + x136*x170 + x140*x174 - x140*x175 + x142*x165 - x142*x170 + x142*x54 - x145*x174 + x145*x175 - x15*x162 - x155*x4 + x155*x67 + x156*x69 + x157*x4 - x157*x67 - x158*x49 + x158*x80 - x16*x162 
         - x160*x17 - x160*x70 - x161*x20 - x161*x71 - x162*x19 - x163*x85 - x163*x86 - x163*x87 + x164*x49 - x164*x80 + x169*x69 + x173*x40 - x173*x60 - x177*x97 + x177*x98 - x179*x52 - x181*x69 - x64*x88 - x66*x98 - x68*x99;
   x183 := (1.0/2.0)*iBar_yzy;
   x184 := (1.0/4.0)*iBar_xxy;
   x185 := (1.0/4.0)*iBar_yyy;
   x186 := (1.0/4.0)*iBar_zzy;
   x187 := 2.0*gBar_xyy;
   x188 := gBar_yy*iBar_xx;
   x189 := 4.0*gBar_yy;
   x190 := gBar_yy*iBar_yy;
   x191 := gBar_yy*iBar_zz;
   x192 := 2.0*gBar_yzy;
   x193 := gBar_xyy*iBar_xx;
   x194 := gBar_xyy*x123;
   x195 := gBar_yyx*x123;
   x196 := gBar_yyx*iBar_xx;
   x197 := gBar_yzx*gBar_yzy;
   x198 := gBar_yyz*gBar_yzy;
   x199 := 24.0*gBar_yy;
   x200 := phi_x*x199;
   x201 := (1.0/2.0)*gBar_yyx;
   x202 := (1.0/2.0)*gBar_yyy;
   x203 := (1.0/2.0)*gBar_yyz;
   x204 := (gBar_xyy ** 2);
   x205 := (gBar_yyx ** 2);
   x206 := (gBar_yyz ** 2);
   x207 := (gBar_yzx ** 2);
   x208 := (gBar_yzy ** 2);
   x209 := 2.0*gBar_yy;
   x210 := (1.0/2.0)*gBar_yzy;
   x211 := (1.0/2.0)*gBar_yz;
   x212 := (1.0/2.0)*gBar_yzx;
   x213 := (1.0/2.0)*gBar_zzx;
   x214 := gBar_xyy*x81;
   x215 := gBar_xyz*x82;
   x216 := gBar_yyx*x81;
   x217 := gBar_yzx*x82;
   x218 := gBar_yyz*x83;
   x219 := gBar_yzy*x83;
   x220 := iBar_yz*x1;
   x221 := gBar_yz*iBar_xx;
   x222 := gBar_yz*iBar_yy;
   x223 := gBar_yz*iBar_zz;
   x224 := 4.0*gBar_yz;
   x225 := 2.0*gBar_yz;
   x226 := (1.0/2.0)*x166;
   x227 := gBar_xyy*x73;
   x228 := gBar_xyy*x220;
   x229 := iBar_xy*x96;
   x230 := x166*x96;
   x231 := gBar_xyy*x158;
   x232 := gBar_xyz*x75;
   x233 := iBar_xz*x97;
   x234 := iBar_xy*x98;
   x235 := x2*x60;
   x236 := iBar_xz*x99;
   x237 := gBar_xzz*x108;
   x238 := gBar_yyx*x73;
   x239 := gBar_yyx*x158;
   x240 := gBar_yyx*x220;
   x241 := gBar_yyz*x78;
   x242 := iBar_yz*x174;
   x243 := iBar_yz*x101;
   x244 := gBar_yzx*x75;
   x245 := gBar_yzx*x108;
   x246 := gBar_zzx*x108;
   x247 := gBar_yzy*x78;
   x248 := 24.0*gBar_yz;
   x249 := phi_x*x248;
   x250 := Gi_xy*x94 + Gi_xz*x90 + Gi_yy*x211 + (1.0/2.0)*Gi_yz*gBar_yy + (1.0/2.0)*Gi_zy*gBar_zz + Gi_zz*x211 + gBar_xyz*x10 + gBar_xyz*x11 + gBar_xyz*x9 + gBar_xzy*x10 + gBar_xzy*x11 - gBar_xzy*x214 + gBar_xzy*x216 + gBar_xzy*x227 - gBar_xzy*x238 + gBar_xzy*x9 - gBar_xzz*x215 
         + gBar_xzz*x217 + gBar_xzz*x228 - gBar_xzz*x230 + gBar_xzz*x232 - gBar_xzz*x240 - gBar_xzz*x244 + gBar_yyz*gBar_yzx*x158 + gBar_yyz*x22 + gBar_yyz*x23 - gBar_yyz*x235 + gBar_yyz*x237 + gBar_yyz*x24 - gBar_yyz*x246 - gBar_yzx*x10 - gBar_yzx*x11 - gBar_yzx*x151 
         - gBar_yzx*x168 + gBar_yzx*x214 - gBar_yzx*x216 - gBar_yzx*x227 + gBar_yzx*x238 - gBar_yzx*x9 - gBar_yzxx*x1 - gBar_yzxy*iBar_xy - gBar_yzxz*iBar_xz + gBar_yzy*x235 - gBar_yzy*x237 + gBar_yzy*x246 - gBar_yzyy*x2 - gBar_yzyz*iBar_yz + gBar_yzz*x172 - gBar_yzz*x218 
         + gBar_yzz*x219 - gBar_yzz*x231 + gBar_yzz*x239 + gBar_yzz*x241 - gBar_yzz*x245 - gBar_yzz*x247 - gBar_yzzz*x3 - gBar_zzx*x166*x201 + gBar_zzx*x215 - gBar_zzx*x217 - gBar_zzx*x228 + gBar_zzx*x230 - gBar_zzx*x232 + gBar_zzx*x240 + gBar_zzx*x244 - gBar_zzy*x172 
         - gBar_zzy*x183 + gBar_zzy*x218 - gBar_zzy*x219 + gBar_zzy*x231 - gBar_zzy*x239 - gBar_zzy*x241 + gBar_zzy*x245 + gBar_zzy*x247 + gBar_zzy*x25 + gBar_zzy*x26 + gBar_zzy*x27 - iBar_xxy*x88 - iBar_xxz*x4 + iBar_xy*x131*x212 + iBar_xy*x170*x201 - iBar_xyy*x212 - iBar_xyy*x98 
         - iBar_xyz*x201 - iBar_xz*x170*x212 - iBar_xzy*x213 - iBar_xzz*x212 - iBar_xzz*x97 - iBar_yyy*x210 - iBar_yzz*x203 - iBar_zzz*x101 + 12.0*phi_y*phi_z - 2.0*phi_yz - x0*x221 - x10*x249 - x101*x68 - x11*x249 + x119*x234 - x119*x236 - x12*x221 + x121*x243 + x122*x97 
         + x122*x98 + x127*x236 - x127*x243 - x131*x234 + x131*x236 - x15*x224 - x158*x197 - x16*x224 + x165*x229 - x165*x233 - x17*x222 - x170*x229 + x170*x233 - x177*x203 - x19*x224 - x20*x223 + x203*x242 + x207*x220 - x207*x226 - x210*x242 - x210*x66 - x212*x64 
         + x220*x49 - x222*x70 - x223*x71 - x225*x85 - x225*x86 - x225*x87 - x226*x49 - x248*x52;
   x251 := (1.0/2.0)*gBar_zzz;
   x252 := (1.0/4.0)*iBar_xxz;
   x253 := (1.0/4.0)*iBar_yyz;
   x254 := (1.0/4.0)*iBar_zzz;
   x255 := 2.0*gBar_xzz;
   x256 := 2.0*gBar_yzz;
   x257 := gBar_zz*iBar_xx;
   x258 := 4.0*gBar_zz;
   x259 := gBar_zz*iBar_yy;
   x260 := gBar_zz*iBar_zz;
   x261 := iBar_xx*x39;
   x262 := iBar_yy*x60;
   x263 := gBar_xzz*gBar_yzz;
   x264 := iBar_yy*x121;
   x265 := iBar_xx*x176;
   x266 := gBar_yzz*gBar_zzy;
   x267 := 24.0*gBar_zz;
   x268 := phi_x*x267;
   x269 := (gBar_xzz ** 2);
   x270 := (gBar_yzz ** 2);
   x271 := (gBar_zzx ** 2);
   x272 := (gBar_zzy ** 2);
   x273 := 2.0*gBar_zz;
   Rab (xx) := Gi_xx*gBar_xx + Gi_yx*gBar_xy + Gi_zx*gBar_xz - 3.0/4.0*gBar_xxx*iBar_xxx + gBar_xxx*x10 + gBar_xxx*x11 + gBar_xxx*x9 - gBar_xxxx*x1 - gBar_xxxy*iBar_xy - gBar_xxxz*iBar_xz - gBar_xxy*iBar_xyx - gBar_xxy*x22 - gBar_xxy*x23 - gBar_xxy*x24 - gBar_xxyy*x2 - gBar_xxyz*iBar_yz 
               - gBar_xxz*iBar_xy*x33 - gBar_xxz*iBar_xzx - gBar_xxz*x25 - gBar_xxz*x26 - gBar_xxz*x27 + gBar_xxz*x31 - gBar_xxzz*x3 - gBar_xyy*iBar_yyx - gBar_xyz*iBar_yzx - gBar_xyz*x35 - gBar_xzx*x31 - gBar_xzx*x5 - gBar_xzx*x61 - gBar_xzy*iBar_yzx + gBar_xzy*iBar_zz*x34 + gBar_xzy*x35 
               - gBar_xzz*iBar_zzx + gBar_yyx*x6 + gBar_yzx*x7 + gBar_zzx*x8 - iBar_xyx*x4 - iBar_xz*x63 - x0*x13 - x0 - x10*x51 - x11*x51 - x12*x13 + x12 - x14*x15 - x14*x16 - x14*x19 - x17*x18 - x18*x70 - x20*x21 - x21*x71 + x22*x28 + x23*x28 + x24*x28 + x25*x29 + x26*x29 
               + x27*x29 + x30*x32 - x30*x54 + x32*x38 - x32*x58 + x33*x34 - x34*x59 + x36*x37 + x36*x39 - x36*x56 + x37*x39 - x38*x54 + x40*x41 + x40*x42 - x41*x60 + x42*x43 - x43*x55 + x44*x45 - x45*x53 + x46*x47 - x47*x57 + x48*x49 - x49*x62 - x50*x52 - x64*x65 
               - x66*x67 - x68*x69 + x72*x73 - x72*x81 + x73*x76 + x74*x75 - x74*x82 + x75*x79 - x76*x81 + x77*x78 - x77*x83 + x78*x80 - x79*x82 - x80*x83 - x84*x85 - x84*x86 - x84*x87;
   Rab (xy) := gBar_xxy*x89 + gBar_xzy*x5 - gBar_yyy*x6 + gBar_zzy*x8 - iBar_xxy*x65 - iBar_xyy*x4 - iBar_xzy*x88 + x153;
   Rab (xz) := gBar_xxz*x89 + gBar_yyz*x6 - gBar_zzz*x8 - iBar_xxz*x65 + iBar_xyx*x97 - iBar_xyz*x4 - iBar_xzz*x88 + x182;
   Rab (xy) := -gBar_xxx*x184 + gBar_yyx*x185 - gBar_yyy*x154 + gBar_yzx*x183 - gBar_yzy*x7 + gBar_zzx*x186 - iBar_xyx*x96 + x153;
   Rab (yy) := Gi_xy*gBar_xy + Gi_yy*gBar_yy + Gi_zy*gBar_yz + gBar_xxy*x184 - gBar_xyx*iBar_xxy - gBar_xyy*gBar_yyx*x53 + gBar_xyy*x102 - gBar_xyy*x132 - gBar_xyz*gBar_yzx*x57 - gBar_xyz*iBar_xzy + gBar_xyz*x103 - gBar_yyx*iBar_xyy - gBar_yyx*x10 - gBar_yyx*x11 + gBar_yyx*x132 - gBar_yyx*x9 
               - gBar_yyxx*x1 - gBar_yyxy*iBar_xy - gBar_yyxz*iBar_xz - 3.0/4.0*gBar_yyy*iBar_yyy + gBar_yyy*x22 + gBar_yyy*x23 + gBar_yyy*x24 - gBar_yyyy*x2 - gBar_yyyz*iBar_yz - gBar_yyz*iBar_yzy - gBar_yyz*x194 + gBar_yyz*x195 - gBar_yyz*x25 - gBar_yyz*x26 - gBar_yyz*x27 + gBar_yyz*x61 
               - gBar_yyzz*x3 - gBar_yzx*iBar_xzy - gBar_yzx*x130 - gBar_yzy*x183 + gBar_yzy*x194 - gBar_yzy*x195 - gBar_yzy*x61 - gBar_yzz*iBar_zzy + gBar_zzy*x186 - iBar_xyy*x96 + iBar_xzy*x98 - x0*x188 + x10*x187 - x10*x200 + x11*x187 - x11*x200 + x119*x121 - x119*x127 
               + x119*x150 - x119*x40 - x12*x188 - x121*x127 - x121*x131 + x121*x150 + x127*x131 + x129*x197 - x131*x150 + x131*x40 - x15*x189 - x16*x189 - x17*x190 - x17 - x176*x193 + x176*x196 + x187*x9 - x189*x19 - x190*x70 - x191*x20 - x191*x71 + x192*x25 + x192*x26 
               + x192*x27 + x193*x56 - x196*x56 + x198*x48 - x198*x62 - x199*x52 - x201*x64 - x202*x66 - x203*x68 + x204*x73 - x204*x81 + x205*x73 - x205*x81 + x206*x78 - x206*x83 + x207*x75 - x207*x82 + x208*x78 - x208*x83 - x209*x85 - x209*x86 - x209*x87 + x70 
               + x75*x77 - x77*x82;
   Rab (yz) := gBar_xxz*x184 + gBar_yyz*x185 - gBar_zzz*x186 + iBar_xyy*x97 - iBar_xyz*x96 - iBar_yyz*x202 - iBar_yzz*x210 + x250;
   Rab (xz) := -gBar_xxx*x252 - gBar_xzz*x5 + gBar_yyx*x253 - gBar_yzz*x7 + gBar_zzx*x254 + iBar_yzz*x212 - iBar_zzx*x251 + x182;
   Rab (yz) := gBar_xxy*x252 - gBar_yyy*x253 + gBar_zzy*x254 - iBar_xzy*x99 + iBar_xzz*x98 - iBar_yzy*x101 - iBar_zzy*x251 + x250;
   Rab (zz) := Gi_xz*gBar_xz + Gi_yz*gBar_yz + Gi_zz*gBar_zz + gBar_xxz*x252 - gBar_xzx*iBar_xxz - gBar_xzy*gBar_yzx*x53 - gBar_xzy*iBar_xyz + gBar_xzy*x155 - gBar_xzz*gBar_zzx*x57 + gBar_xzz*x122 + gBar_xzz*x156 - gBar_xzz*x181 + gBar_xzz*x261 - gBar_xzz*x265 + gBar_yyz*x253 
               - gBar_yzx*iBar_xyz - gBar_yzy*iBar_yyz + gBar_yzz*x152 - gBar_yzz*x177 - gBar_yzz*x262 + gBar_yzz*x264 - gBar_zzx*iBar_xzz - gBar_zzx*x10 - gBar_zzx*x11 - gBar_zzx*x122 - gBar_zzx*x169 + gBar_zzx*x181 - gBar_zzx*x261 + gBar_zzx*x265 - gBar_zzx*x9 - gBar_zzxx*x1 
               - gBar_zzxy*iBar_xy - gBar_zzxz*iBar_xz - gBar_zzy*iBar_yzz - gBar_zzy*x152 + gBar_zzy*x177 - gBar_zzy*x22 - gBar_zzy*x23 - gBar_zzy*x24 + gBar_zzy*x262 - gBar_zzy*x264 - 1.0/2.0*gBar_zzy*x66 - gBar_zzyy*x2 - gBar_zzyz*iBar_yz - 3.0/4.0*gBar_zzz*iBar_zzz + gBar_zzz*x25 
               + gBar_zzz*x26 + gBar_zzz*x27 - gBar_zzzz*x3 + iBar_xyz*x97 - iBar_xz*iBar_yz*x263 - iBar_xzz*x99 - iBar_yzz*x101 - x0*x257 + x10*x255 - x10*x268 + x11*x255 - x11*x268 - x12*x257 + x129*x263 - x15*x258 - x16*x258 + x165*x174 - x17*x259 - x170*x174 + x170*x175 
               + x174*x54 - x175*x54 - x19*x258 - x20*x260 - x20 + x207*x73 - x207*x81 - x213*x64 + x22*x256 + x23*x256 + x24*x256 - x251*x68 + x255*x9 - x259*x70 - x260*x71 + x266*x48 - x266*x62 - x267*x52 + x269*x75 - x269*x82 + x270*x78 - x270*x83 + x271*x75 
               - x271*x82 + x272*x78 - x272*x83 - x273*x85 - x273*x86 - x273*x87 + x71 + x73*x80 - x80*x81;
end set_3d_ricci;
-- end: ./cadabra/ricci.ad -------------------------------------------------------------------------

-- beg: ./cadabra/dot-N.ad -------------------------------------------------------------------------
Procedure set_3d_dot_N is
begin
   dot_N := 0.0;
end set_3d_dot_N;
-- end: ./cadabra/dot-N.ad -------------------------------------------------------------------------
-- beg: ./cadabra/dot-Gi.ad ------------------------------------------------------------------------
Procedure set_3d_dot_Gi is
   x0,  x1,  x2,  x3,  x4,  x5,  x6,  x7,  x8,  x9,  x10, x11, x12, x13, x14, x15, x16, 
   x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, 
   x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49, x50 : Real;
begin
   x0  := 2.0*N_x;
   x1  := 2.0*N_y;
   x2  := 2.0*N_z;
   x3  := 12.0*N;
   x4  := phi_x*x3;
   x5  := phi_y*x3;
   x6  := phi_z*x3;
   x7  := (4.0/3.0)*N;
   x8  := trK_x*x7;
   x9  := trK_y*x7;
   x10 := trK_z*x7;
   x11 := BBar_xx*N;
   x12 := gBar_xxx*x11;
   x13 := BBar_yy*N;
   x14 := gBar_yyy*x13;
   x15 := BBar_zz*N;
   x16 := gBar_zzz*x15;
   x17 := gBar_xxy*x11;
   x18 := gBar_xxz*x11;
   x19 := 2.0*x11;
   x20 := gBar_xyx*x19;
   x21 := gBar_xzx*x19;
   x22 := 2.0*N;
   x23 := BBar_xy*x22;
   x24 := gBar_xxy*x23;
   x25 := iBar_xz*x23;
   x26 := gBar_yyx*x23;
   x27 := BBar_xz*x22;
   x28 := gBar_xxz*x27;
   x29 := iBar_xy*x27;
   x30 := gBar_zzx*x27;
   x31 := 2.0*x13;
   x32 := gBar_xyy*x31;
   x33 := gBar_yyx*x13;
   x34 := gBar_yyz*x13;
   x35 := gBar_yzy*x31;
   x36 := BBar_yz*x22;
   x37 := iBar_xx*x36;
   x38 := iBar_xy*x36;
   x39 := gBar_zzy*x36;
   x40 := 2.0*x15;
   x41 := gBar_xzz*x40;
   x42 := gBar_yzz*x40;
   x43 := gBar_zzx*x15;
   x44 := gBar_zzy*x15;
   x45 := iBar_yz*x23;
   x46 := iBar_yy*x27;
   x47 := gBar_yyz*x36;
   x48 := iBar_zz*x23;
   x49 := iBar_yz*x27;
   x50 := iBar_xz*x36;
   dot_Gi (1) := -BBar_xx*x0 + BBar_xx*x4 - BBar_xy*x1 + BBar_xy*x5 - BBar_xz*x2 + BBar_xz*x6 - gBar_xyz*x25 + gBar_xyz*x29 + gBar_xyz*x37 + gBar_xzy*x25 - gBar_xzy*x29 + gBar_xzy*x37 + gBar_yyz*x38 + gBar_yzx*x25 + gBar_yzx*x29 - gBar_yzx*x37 + iBar_xx*x12 + iBar_xx*x24 + iBar_xx*x28 
               + iBar_xx*x32 - iBar_xx*x33 + iBar_xx*x41 - iBar_xx*x43 - iBar_xx*x8 + iBar_xy*x14 - iBar_xy*x17 + iBar_xy*x20 + iBar_xy*x26 + iBar_xy*x42 - iBar_xy*x44 - iBar_xy*x9 - iBar_xz*x10 + iBar_xz*x16 - iBar_xz*x18 + iBar_xz*x21 + iBar_xz*x30 - iBar_xz*x34 + iBar_xz*x35 
               + iBar_xz*x39;
   dot_Gi (2) := -BBar_xy*x0 + BBar_xy*x4 - BBar_yy*x1 + BBar_yy*x5 - BBar_yz*x2 + BBar_yz*x6 + gBar_xxz*x29 + gBar_xyz*x38 - gBar_xyz*x45 + gBar_xyz*x46 + gBar_xzy*x38 + gBar_xzy*x45 - gBar_xzy*x46 - gBar_yzx*x38 + gBar_yzx*x45 + gBar_yzx*x46 + iBar_xy*x12 + iBar_xy*x24 + iBar_xy*x32 
               - iBar_xy*x33 + iBar_xy*x41 - iBar_xy*x43 - iBar_xy*x8 + iBar_yy*x14 - iBar_yy*x17 + iBar_yy*x20 + iBar_yy*x26 + iBar_yy*x42 - iBar_yy*x44 + iBar_yy*x47 - iBar_yy*x9 - iBar_yz*x10 + iBar_yz*x16 - iBar_yz*x18 + iBar_yz*x21 + iBar_yz*x30 - iBar_yz*x34 + iBar_yz*x35 
               + iBar_yz*x39;
   dot_Gi (3) := -BBar_xz*x0 + BBar_xz*x4 - BBar_yz*x1 + BBar_yz*x5 - BBar_zz*x2 + BBar_zz*x6 + gBar_xxy*x25 - gBar_xyz*x48 + gBar_xyz*x49 + gBar_xyz*x50 + gBar_xzy*x48 - gBar_xzy*x49 + gBar_xzy*x50 + gBar_yzx*x48 + gBar_yzx*x49 - gBar_yzx*x50 + iBar_xz*x12 + iBar_xz*x28 + iBar_xz*x32 
               - iBar_xz*x33 + iBar_xz*x41 - iBar_xz*x43 - iBar_xz*x8 + iBar_yz*x14 - iBar_yz*x17 + iBar_yz*x20 + iBar_yz*x26 + iBar_yz*x42 - iBar_yz*x44 + iBar_yz*x47 - iBar_yz*x9 - iBar_zz*x10 + iBar_zz*x16 - iBar_zz*x18 + iBar_zz*x21 + iBar_zz*x30 - iBar_zz*x34 + iBar_zz*x35 
               + iBar_zz*x39;
end set_3d_dot_Gi;
-- end: ./cadabra/dot-Gi.ad ------------------------------------------------------------------------
-- beg: ./cadabra/dot-phi.ad -----------------------------------------------------------------------
Procedure set_3d_dot_phi is
begin
   dot_phi := -1.0/6.0*N*trK;
end set_3d_dot_phi;
-- end: ./cadabra/dot-phi.ad -----------------------------------------------------------------------
-- beg: ./cadabra/dot-trK.ad -----------------------------------------------------------------------
Procedure set_3d_dot_trK is
   x0, x1, x2, x3 : Real;
begin
   x0 := 2.0*N;
   x1 := 2.0*iBar_xy;
   x2 := 2.0*iBar_xz;
   x3 := 2.0*iBar_yz;
   dot_trK := ABar_xx*BBar_xx*N + ABar_xy*BBar_xy*x0 + ABar_xz*BBar_xz*x0 + ABar_yy*BBar_yy*N + ABar_yz*BBar_yz*x0 + ABar_zz*BBar_zz*N + (1.0/3.0)*N*(trK ** 2) + (-2.0*N_x*iBar_xx*phi_x - N_x*phi_y*x1 - N_x*phi_z*x2 - N_x*(iBar_xxx + iBar_xyy + iBar_xzz) - N_xx*iBar_xx - N_xy*x1 - N_xz*x2 
            - 2.0*N_y*iBar_yy*phi_y - N_y*phi_x*x1 - N_y*phi_z*x3 - N_y*(iBar_xyx + iBar_yyy + iBar_yzz) - N_yy*iBar_yy - N_yz*x3 - 2.0*N_z*iBar_zz*phi_z - N_z*phi_x*x2 - N_z*phi_y*x3 - N_z*(iBar_xzx + iBar_yzy + iBar_zzz) - N_zz*iBar_zz)*exp(-4.0*phi);
end set_3d_dot_trK;
-- end: ./cadabra/dot-trK.ad -----------------------------------------------------------------------
-- beg: ./cadabra/dot-gBar.ad ----------------------------------------------------------------------
Procedure set_3d_dot_gBar is
   x0, x1, x2, x3 : Real;
begin
   x0 := 2.0*N;
   x1 := -ABar_xy*x0;
   x2 := -ABar_xz*x0;
   x3 := -ABar_yz*x0;
   dot_gBar (xx) := -ABar_xx*x0;
   dot_gBar (xy) := x1;
   dot_gBar (xz) := x2;
   dot_gBar (xy) := x1;
   dot_gBar (yy) := -ABar_yy*x0;
   dot_gBar (yz) := x3;
   dot_gBar (xz) := x2;
   dot_gBar (yz) := x3;
   dot_gBar (zz) := -ABar_zz*x0;
end set_3d_dot_gBar;
-- end: ./cadabra/dot-gBar.ad ----------------------------------------------------------------------
-- beg: ./cadabra/dot-ABar.ad ----------------------------------------------------------------------
Procedure set_3d_dot_ABar is
   x0,   x1,   x2,   x3,   x4,   x5,   x6,   x7,   x8,   x9,   x10,  x11,  x12,  x13,  
   x14,  x15,  x16,  x17,  x18,  x19,  x20,  x21,  x22,  x23,  x24,  x25,  x26,  x27,  
   x28,  x29,  x30,  x31,  x32,  x33,  x34,  x35,  x36,  x37,  x38,  x39,  x40,  x41,  
   x42,  x43,  x44,  x45,  x46,  x47,  x48,  x49,  x50,  x51,  x52,  x53,  x54,  x55,  
   x56,  x57,  x58,  x59,  x60,  x61,  x62,  x63,  x64,  x65,  x66,  x67,  x68,  x69,  
   x70,  x71,  x72,  x73,  x74,  x75,  x76,  x77,  x78,  x79,  x80,  x81,  x82,  x83,  
   x84,  x85,  x86,  x87,  x88,  x89,  x90,  x91,  x92,  x93,  x94,  x95,  x96,  x97,  
   x98,  x99,  x100, x101, x102, x103, x104, x105, x106, x107, x108, x109, x110, x111, 
   x112, x113, x114, x115, x116 : Real;
begin
   x0   := N*trK;
   x1   := ABar_xx*ABar_xy;
   x2   := 4.0*N;
   x3   := iBar_xy*x2;
   x4   := ABar_xz*x2;
   x5   := ABar_xx*iBar_xz;
   x6   := ABar_xy*iBar_yz;
   x7   := 2.0*N;
   x8   := iBar_xx*x7;
   x9   := (ABar_xy ** 2);
   x10  := x7*x9;
   x11  := (ABar_xz ** 2);
   x12  := x11*x7;
   x13  := exp(-4.0*phi);
   x14  := Rxx*N;
   x15  := N_x*phi_x;
   x16  := N_x*iBar_xy;
   x17  := N_x*iBar_xz;
   x18  := N_y*iBar_yy;
   x19  := N_y*iBar_yz;
   x20  := N_z*iBar_yz;
   x21  := N_z*iBar_zz;
   x22  := N_x*iBar_xx;
   x23  := (1.0/2.0)*gBar_xxx;
   x24  := (1.0/2.0)*gBar_xxy;
   x25  := (1.0/2.0)*gBar_xxz;
   x26  := (1.0/3.0)*gBar_xx;
   x27  := N_xx*iBar_xx;
   x28  := (2.0/3.0)*gBar_xx;
   x29  := N_xy*iBar_xy;
   x30  := N_xz*iBar_xz;
   x31  := N_y*iBar_xy;
   x32  := N_yy*iBar_yy;
   x33  := N_yz*iBar_yz;
   x34  := N_z*iBar_xz;
   x35  := N_zz*iBar_zz;
   x36  := (4.0/3.0)*gBar_xx;
   x37  := iBar_xx*x15;
   x38  := phi_y*x36;
   x39  := phi_z*x36;
   x40  := phi_x*x36;
   x41  := iBar_xx*x14;
   x42  := Rxy*N;
   x43  := iBar_xy*x42;
   x44  := Rxz*N;
   x45  := iBar_xz*x44;
   x46  := Ryy*N;
   x47  := iBar_yy*x46;
   x48  := Ryz*N;
   x49  := iBar_yz*x48;
   x50  := Rzz*N;
   x51  := iBar_zz*x50;
   x52  := N_x*(iBar_xxx + iBar_xyy + iBar_xzz);
   x53  := N_y*(iBar_xyx + iBar_yyy + iBar_yzz);
   x54  := N_z*(iBar_xzx + iBar_yzy + iBar_zzz);
   x55  := ABar_yy*x7;
   x56  := ABar_xx*iBar_xy;
   x57  := ABar_yz*x7;
   x58  := ABar_xy*iBar_xz;
   x59  := ABar_xz*x7;
   x60  := iBar_yy*x7;
   x61  := ABar_xy*x60;
   x62  := ABar_xz*iBar_yz;
   x63  := iBar_zz*x7;
   x64  := ABar_xz*x63;
   x65  := 2.0*N_x;
   x66  := 2.0*phi_x;
   x67  := (1.0/2.0)*x17;
   x68  := (1.0/2.0)*gBar_yyx;
   x69  := (1.0/3.0)*gBar_xy;
   x70  := (2.0/3.0)*gBar_xy;
   x71  := (1.0/2.0)*x19;
   x72  := (1.0/2.0)*x21;
   x73  := (4.0/3.0)*gBar_xy;
   x74  := phi_y*x73;
   x75  := phi_z*x73;
   x76  := phi_x*x73;
   x77  := ABar_xy*x0 - ABar_yy*x61 - ABar_yz*x64 - iBar_xy*x10 - x1*x8 + x13*(-N_xy + N_y*x66 - gBar_xyz*x67 - gBar_xyz*x71 - gBar_xyz*x72 + gBar_xzy*x67 + gBar_xzy*x71 + gBar_xzy*x72 + gBar_yzx*x67 + gBar_yzx*x71 + gBar_yzx*x72 + phi_y*x65 + x16*x68 - x16*x74 - x17*x75 + x18*x68 
         - x18*x74 - x19*x75 + x20*x68 - x20*x74 - x21*x75 + x22*x24 + x24*x31 + x24*x34 + x27*x69 + x29*x70 + x30*x70 - x31*x76 + x32*x69 + x33*x70 - x34*x76 + x35*x69 - x37*x73 - x41*x69 + x42 - x43*x70 - x45*x70 - x47*x69 - x49*x70 - x51*x69 + x52*x69 + x53*x69 
         + x54*x69) - x5*x57 - x55*x56 - x55*x62 - x57*x6 - x58*x59;
   x78  := ABar_xz*x8;
   x79  := ABar_zz*x7;
   x80  := ABar_xy*iBar_xy;
   x81  := (1.0/2.0)*x16;
   x82  := (1.0/3.0)*gBar_xz;
   x83  := (2.0/3.0)*gBar_xz;
   x84  := (1.0/2.0)*x18;
   x85  := (1.0/2.0)*x20;
   x86  := (4.0/3.0)*gBar_xz;
   x87  := phi_y*x86;
   x88  := phi_z*x86;
   x89  := phi_x*x86;
   x90  := -ABar_xx*x78 + ABar_xz*x0 - ABar_yz*x61 - ABar_zz*x64 - iBar_xz*x12 + x13*(-N_xz + N_z*x66 + gBar_xyz*x81 + gBar_xyz*x84 + gBar_xyz*x85 - gBar_xzy*x81 - gBar_xzy*x84 - gBar_xzy*x85 + gBar_yzx*x81 + gBar_yzx*x84 + gBar_yzx*x85 + gBar_zzx*x67 + gBar_zzx*x71 + gBar_zzx*x72 
         + phi_z*x65 - x16*x87 - x17*x88 - x18*x87 - x19*x88 - x20*x87 - x21*x88 + x22*x25 + x25*x31 + x25*x34 + x27*x82 + x29*x83 + x30*x83 - x31*x89 + x32*x82 + x33*x83 - x34*x89 + x35*x82 - x37*x86 - x41*x82 - x43*x83 + x44 - x45*x83 - x47*x82 - x49*x83 
         - x51*x82 + x52*x82 + x53*x82 + x54*x82) - x5*x79 - x56*x57 - x57*x62 - x59*x80 - x6*x79;
   x91  := ABar_yz*x2;
   x92  := iBar_yz*x91;
   x93  := (ABar_yz ** 2);
   x94  := x7*x93;
   x95  := (1.0/3.0)*gBar_yy;
   x96  := (2.0/3.0)*gBar_yy;
   x97  := (4.0/3.0)*gBar_yy;
   x98  := phi_y*x97;
   x99  := phi_z*x97;
   x100 := phi_x*x97;
   x101 := (1.0/2.0)*x22;
   x102 := (1.0/3.0)*gBar_yz;
   x103 := (2.0/3.0)*gBar_yz;
   x104 := (1.0/2.0)*x31;
   x105 := (1.0/2.0)*x34;
   x106 := (4.0/3.0)*gBar_yz;
   x107 := phi_y*x106;
   x108 := phi_z*x106;
   x109 := phi_x*x106;
   x110 := -ABar_xy*x78 - ABar_xz*iBar_xy*x55 - ABar_xz*iBar_xz*x57 - ABar_yy*ABar_yz*x60 - ABar_yz*ABar_zz*x63 + ABar_yz*x0 - ABar_zz*iBar_yz*x55 - iBar_yz*x94 + x13*(2.0*N_y*phi_z - N_yz + 2.0*N_z*phi_y + gBar_xyz*x101 + gBar_xyz*x104 + gBar_xyz*x105 + gBar_xzy*x101 + gBar_xzy*x104 
         + gBar_xzy*x105 + gBar_yyz*x81 + gBar_yyz*x84 + gBar_yyz*x85 - gBar_yzx*x101 - gBar_yzx*x104 - gBar_yzx*x105 + gBar_zzy*x67 + gBar_zzy*x71 + gBar_zzy*x72 + x102*x27 + x102*x32 + x102*x35 - x102*x41 - x102*x47 - x102*x51 + x102*x52 + x102*x53 + x102*x54 + x103*x29 
         + x103*x30 + x103*x33 - x103*x43 - x103*x45 - x103*x49 - x106*x37 - x107*x16 - x107*x18 - x107*x20 - x108*x17 - x108*x19 - x108*x21 - x109*x31 - x109*x34 + x48) - x57*x80 - x58*x79;
   x111 := (1.0/3.0)*gBar_zz;
   x112 := (2.0/3.0)*gBar_zz;
   x113 := (4.0/3.0)*gBar_zz;
   x114 := phi_y*x113;
   x115 := phi_z*x113;
   x116 := phi_x*x113;
   dot_ABar (xx) := -(ABar_xx ** 2)*x8 + ABar_xx*x0 - iBar_yy*x10 - iBar_zz*x12 - x1*x3 + x13*(-N_xx + gBar_xyx*x16 + gBar_xyx*x18 + gBar_xyx*x20 + gBar_xzx*x17 + gBar_xzx*x19 + gBar_xzx*x21 + x14 + 4.0*x15 - x16*x24 - x16*x38 - x17*x25 - x17*x39 - x18*x24 - x18*x38 - x19*x25 - x19*x39 
                    - x20*x24 - x20*x38 - x21*x25 - x21*x39 + x22*x23 + x23*x31 + x23*x34 + x26*x27 + x26*x32 + x26*x35 - x26*x41 - x26*x47 - x26*x51 + x26*x52 + x26*x53 + x26*x54 + x28*x29 + x28*x30 + x28*x33 - x28*x43 - x28*x45 - x28*x49 - x31*x40 - x34*x40 - x36*x37) 
                    - x4*x5 - x4*x6;
   dot_ABar (xy) := x77;
   dot_ABar (xz) := x90;
   dot_ABar (xy) := x77;
   dot_ABar (yy) := -ABar_xy*ABar_yy*x3 - (ABar_yy ** 2)*x60 + ABar_yy*x0 - ABar_yy*x92 - iBar_zz*x94 + x13*(4.0*N_y*phi_y - N_yy + gBar_xyy*x22 + gBar_xyy*x31 + gBar_xyy*x34 + gBar_yyy*x81 + gBar_yyy*x84 + gBar_yyy*x85 - gBar_yyz*x67 - gBar_yyz*x71 - gBar_yyz*x72 + gBar_yzy*x17 + gBar_yzy*x19 
                    + gBar_yzy*x21 - x100*x31 - x100*x34 - x16*x98 - x17*x99 - x18*x98 - x19*x99 - x20*x98 - x21*x99 - x22*x68 + x27*x95 + x29*x96 + x30*x96 - x31*x68 + x32*x95 + x33*x96 - x34*x68 + x35*x95 - x37*x97 - x41*x95 - x43*x96 - x45*x96 + x46 - x47*x95 - x49*x96 
                    - x51*x95 + x52*x95 + x53*x95 + x54*x95) - x58*x91 - x8*x9;
   dot_ABar (yz) := x110;
   dot_ABar (xz) := x90;
   dot_ABar (yz) := x110;
   dot_ABar (zz) := -ABar_xz*ABar_yz*x3 - (ABar_zz ** 2)*x63 - ABar_zz*iBar_xz*x4 + ABar_zz*x0 - ABar_zz*x92 - x11*x8 + x13*(4.0*N_z*phi_z - N_zz + gBar_xzz*x22 + gBar_xzz*x31 + gBar_xzz*x34 + gBar_yzz*x16 + gBar_yzz*x18 + gBar_yzz*x20 - gBar_zzx*x101 - gBar_zzx*x104 - gBar_zzx*x105 
                    - gBar_zzy*x81 - gBar_zzy*x84 - gBar_zzy*x85 + gBar_zzz*x67 + gBar_zzz*x71 + gBar_zzz*x72 + x111*x27 + x111*x32 + x111*x35 - x111*x41 - x111*x47 - x111*x51 + x111*x52 + x111*x53 + x111*x54 + x112*x29 + x112*x30 + x112*x33 - x112*x43 - x112*x45 - x112*x49 
                    - x113*x37 - x114*x16 - x114*x18 - x114*x20 - x115*x17 - x115*x19 - x115*x21 - x116*x31 - x116*x34 + x50) - x60*x93;
end set_3d_dot_ABar;
-- end: ./cadabra/dot-ABar.ad ----------------------------------------------------------------------

      procedure set_data is
         i, j, k : Integer;
         x, y, z : Real;
      begin

         i := point.i;
         j := point.j;
         k := point.k;

         x := point.x;
         y := point.y;
         z := point.z;

         N    := BSSNBase.N    (i,j,k);
         Gi   := BSSNBase.Gi   (i,j,k);
         phi  := BSSNBase.phi  (i,j,k);
         trK  := BSSNBase.trK  (i,j,k);
         gBar := BSSNBase.gBar (i,j,k);
         ABar := BSSNBase.ABar (i,j,k);

         iBar := symm_inverse (gBar);
         BBar := symm_raise_indices (ABar, iBar);

         -- second order centred finite differences for the lapse

         declare
            N : LapseGridArray renames BSSNBase.N;
         begin

            d1N (1) := (N (i+1,j,k) - N (i-1,j,k)) / (two_dx);
            d1N (2) := (N (i,j+1,k) - N (i,j-1,k)) / (two_dy);
            d1N (3) := (N (i,j,k+1) - N (i,j,k-1)) / (two_dz);

            d2N (xx) := (N (i+1,j,k) - 2.0*N (i,j,k) + N (i-1,j,k)) / (dxdx);
            d2N (yy) := (N (i,j+1,k) - 2.0*N (i,j,k) + N (i,j-1,k)) / (dydy);
            d2N (zz) := (N (i,j,k+1) - 2.0*N (i,j,k) + N (i,j,k-1)) / (dzdz);

            d2N (xy) := (N (i+1,j+1,k) + N (i-1,j-1,k) - N (i+1,j-1,k) - N (i-1,j+1,k)) / (four_dxdy);
            d2N (xz) := (N (i+1,j,k+1) + N (i-1,j,k-1) - N (i+1,j,k-1) - N (i-1,j,k+1)) / (four_dxdz);
            d2N (yz) := (N (i,j+1,k+1) + N (i,j-1,k-1) - N (i,j+1,k-1) - N (i,j-1,k+1)) / (four_dydz);

         end;

         -- second order centred finite differences for the conformal factor phi

         declare
            phi : ConFactGridArray renames BSSNBase.phi;
         begin

            d1phi (1) := (phi (i+1,j,k) - phi (i-1,j,k)) / (two_dx);
            d1phi (2) := (phi (i,j+1,k) - phi (i,j-1,k)) / (two_dy);
            d1phi (3) := (phi (i,j,k+1) - phi (i,j,k-1)) / (two_dz);

            d2phi (xx) := (phi (i+1,j,k) - 2.0*phi (i,j,k) + phi (i-1,j,k)) / (dxdx);
            d2phi (yy) := (phi (i,j+1,k) - 2.0*phi (i,j,k) + phi (i,j-1,k)) / (dydy);
            d2phi (zz) := (phi (i,j,k+1) - 2.0*phi (i,j,k) + phi (i,j,k-1)) / (dzdz);

            d2phi (xy) := (phi (i+1,j+1,k) + phi (i-1,j-1,k) - phi (i+1,j-1,k) - phi (i-1,j+1,k)) / (four_dxdy);
            d2phi (xz) := (phi (i+1,j,k+1) + phi (i-1,j,k-1) - phi (i+1,j,k-1) - phi (i-1,j,k+1)) / (four_dxdz);
            d2phi (yz) := (phi (i,j+1,k+1) + phi (i,j-1,k-1) - phi (i,j+1,k-1) - phi (i,j-1,k+1)) / (four_dydz);

         end;

         -- second order centred finite differences for trK

         declare
            trK : TraceKGridArray renames BSSNBase.trK;
         begin

            d1trK (1) := (trK (i+1,j,k) - trK (i-1,j,k)) / (two_dx);
            d1trK (2) := (trK (i,j+1,k) - trK (i,j-1,k)) / (two_dy);
            d1trK (3) := (trK (i,j,k+1) - trK (i,j,k-1)) / (two_dz);

         end;

         -- second order centred finite differences for trK

         declare
            Gi : GammaGridArray renames BSSNBase.Gi;
         begin

            d1Gi (1) := (Gi (i+1,j,k) - Gi (i-1,j,k)) / (two_dx);
            d1Gi (2) := (Gi (i,j+1,k) - Gi (i,j-1,k)) / (two_dy);
            d1Gi (3) := (Gi (i,j,k+1) - Gi (i,j,k-1)) / (two_dz);

         end;

         -- second order centred finite differences for the 3-metric

         declare
            gBar : MetricGridArray renames BSSNBase.gBar;
         begin

            d1gBar (1) := (gBar (i+1,j,k) - gBar (i-1,j,k)) / (two_dx);
            d1gBar (2) := (gBar (i,j+1,k) - gBar (i,j-1,k)) / (two_dy);
            d1gBar (3) := (gBar (i,j,k+1) - gBar (i,j,k-1)) / (two_dz);

            d2gBar (xx) := (gBar (i+1,j,k) - 2.0*gBar (i,j,k) + gBar (i-1,j,k)) / (dxdx);
            d2gBar (yy) := (gBar (i,j+1,k) - 2.0*gBar (i,j,k) + gBar (i,j-1,k)) / (dydy);
            d2gBar (zz) := (gBar (i,j,k+1) - 2.0*gBar (i,j,k) + gBar (i,j,k-1)) / (dzdz);

            d2gBar (xy) := (gBar (i+1,j+1,k) + gBar (i-1,j-1,k) - gBar (i+1,j-1,k) - gBar (i-1,j+1,k)) / (four_dxdy);
            d2gBar (xz) := (gBar (i+1,j,k+1) + gBar (i-1,j,k-1) - gBar (i+1,j,k-1) - gBar (i-1,j,k+1)) / (four_dxdz);
            d2gBar (yz) := (gBar (i,j+1,k+1) + gBar (i,j-1,k-1) - gBar (i,j+1,k-1) - gBar (i,j-1,k+1)) / (four_dydz);

         end;

         d1iBar (1) := - symm_raise_indices (d1gBar (1), iBar);
         d1iBar (2) := - symm_raise_indices (d1gBar (2), iBar);
         d1iBar (3) := - symm_raise_indices (d1gBar (3), iBar);

         set_3d_ricci;

      end set_data;

   begin

      set_data;

      set_3d_dot_N;
      set_3d_dot_Gi;
      set_3d_dot_phi;
      set_3d_dot_trK;
      set_3d_dot_gBar;
      set_3d_dot_ABar;

      declare

         i, j, k : Integer;

      begin

         i := point.i;
         j := point.j;
         k := point.k;

         BSSNBase.dot_N    (i,j,k) := dot_N;
         BSSNBase.dot_Gi   (i,j,k) := dot_Gi;
         BSSNBase.dot_phi  (i,j,k) := dot_phi;
         BSSNBase.dot_trK  (i,j,k) := dot_trK;
         BSSNBase.dot_gBar (i,j,k) := dot_gBar;
         BSSNBase.dot_ABar (i,j,k) := dot_ABar;

      end;

   end set_time_derivatives;

   procedure set_finite_diff_factors is
   begin

      dxdx := dx * dx;
      dydy := dy * dy;
      dzdz := dz * dz;

      two_dx := 2.0 * dx;
      two_dy := 2.0 * dy;
      two_dz := 2.0 * dz;

      four_dxdy := 4.0 * dx * dy;
      four_dxdz := 4.0 * dx * dz;
      four_dydz := 4.0 * dy * dz;

   end set_finite_diff_factors;

   procedure set_time_derivatives_intr (params : SlaveParams) is

      b : Integer;

      the_task  : Integer := params (1);
      beg_point : Integer := params (4);
      end_point : Integer := params (5);

   begin

      for a in beg_point .. end_point loop

         b := interior (a);

         set_time_derivatives (grid_point_list(b));

      end loop;

   end set_time_derivatives_intr;

   procedure set_time_derivatives_bndry_ns (params : SlaveParams) is

      b, i, j, k : Integer;

      the_task  : Integer := params (1);

      beg_north : Integer := params (8);
      end_north : Integer := params (9);
      beg_south : Integer := params (10);
      end_south : Integer := params (11);

   begin

      -- apply periodic boundary conditions

      -- north/south boundaries

      for a in beg_north .. end_north loop

         b := north_bndry (a);

         i := grid_point_list (b).i;
         j := grid_point_list (b).j;
         k := grid_point_list (b).k;  -- equals num_z

            BSSNBase.dot_N (i,j,k) :=     BSSNBase.dot_N (i,j,2);
           BSSNBase.dot_Gi (i,j,k) :=    BSSNBase.dot_Gi (i,j,2);
          BSSNBase.dot_phi (i,j,k) :=   BSSNBase.dot_phi (i,j,2);
          BSSNBase.dot_trK (i,j,k) :=   BSSNBase.dot_trK (i,j,2);
         BSSNBase.dot_gBar (i,j,k) :=  BSSNBase.dot_gBar (i,j,2);
         BSSNBase.dot_ABar (i,j,k) :=  BSSNBase.dot_ABar (i,j,2);

      end loop;

      for a in beg_south .. end_south loop

         b := south_bndry (a);

         i := grid_point_list (b).i;
         j := grid_point_list (b).j;
         k := grid_point_list (b).k;  -- equals 1

            BSSNBase.dot_N (i,j,k) :=     BSSNBase.dot_N (i,j,num_z-1);
           BSSNBase.dot_Gi (i,j,k) :=    BSSNBase.dot_Gi (i,j,num_z-1);
          BSSNBase.dot_phi (i,j,k) :=   BSSNBase.dot_phi (i,j,num_z-1);
          BSSNBase.dot_trK (i,j,k) :=   BSSNBase.dot_trK (i,j,num_z-1);
         BSSNBase.dot_gBar (i,j,k) :=  BSSNBase.dot_gBar (i,j,num_z-1);
         BSSNBase.dot_ABar (i,j,k) :=  BSSNBase.dot_ABar (i,j,num_z-1);

      end loop;

   end set_time_derivatives_bndry_ns;

   procedure set_time_derivatives_bndry_ew (params : SlaveParams) is

      b, i, j, k : Integer;

      the_task  : Integer := params (1);

      beg_east  : Integer := params (12);
      end_east  : Integer := params (13);
      beg_west  : Integer := params (14);
      end_west  : Integer := params (15);

   begin

      -- apply periodic boundary conditions

      -- east/west boundaries

      for a in beg_east .. end_east loop

         b := east_bndry (a);

         i := grid_point_list (b).i;
         j := grid_point_list (b).j;  -- equals num_y
         k := grid_point_list (b).k;

            BSSNBase.dot_N (i,j,k) :=     BSSNBase.dot_N (i,2,k);
           BSSNBase.dot_Gi (i,j,k) :=    BSSNBase.dot_Gi (i,2,k);
          BSSNBase.dot_phi (i,j,k) :=   BSSNBase.dot_phi (i,2,k);
          BSSNBase.dot_trK (i,j,k) :=   BSSNBase.dot_trK (i,2,k);
         BSSNBase.dot_gBar (i,j,k) :=  BSSNBase.dot_gBar (i,2,k);
         BSSNBase.dot_ABar (i,j,k) :=  BSSNBase.dot_ABar (i,2,k);

      end loop;

      for a in beg_west .. end_west loop

         b := west_bndry (a);

         i := grid_point_list (b).i;
         j := grid_point_list (b).j;  -- equals 1
         k := grid_point_list (b).k;

            BSSNBase.dot_N (i,j,k) :=     BSSNBase.dot_N (i,num_y-1,k);
           BSSNBase.dot_Gi (i,j,k) :=    BSSNBase.dot_Gi (i,num_y-1,k);
          BSSNBase.dot_phi (i,j,k) :=   BSSNBase.dot_phi (i,num_y-1,k);
          BSSNBase.dot_trK (i,j,k) :=   BSSNBase.dot_trK (i,num_y-1,k);
         BSSNBase.dot_gBar (i,j,k) :=  BSSNBase.dot_gBar (i,num_y-1,k);
         BSSNBase.dot_ABar (i,j,k) :=  BSSNBase.dot_ABar (i,num_y-1,k);

      end loop;

   end set_time_derivatives_bndry_ew;

   procedure set_time_derivatives_bndry_fb (params : SlaveParams) is

      b, i, j, k : Integer;

      the_task  : Integer := params (1);

      beg_front : Integer := params (16);
      end_front : Integer := params (17);
      beg_back  : Integer := params (18);
      end_back  : Integer := params (19);

   begin

      -- apply periodic boundary conditions

      -- front/back boundaries

      for a in beg_front .. end_front loop

         b := front_bndry (a);

         i := grid_point_list (b).i;  -- equals num_x
         j := grid_point_list (b).j;
         k := grid_point_list (b).k;

            BSSNBase.dot_N (i,j,k) :=     BSSNBase.dot_N (2,j,k);
           BSSNBase.dot_Gi (i,j,k) :=    BSSNBase.dot_Gi (2,j,k);
          BSSNBase.dot_phi (i,j,k) :=   BSSNBase.dot_phi (2,j,k);
          BSSNBase.dot_trK (i,j,k) :=   BSSNBase.dot_trK (2,j,k);
         BSSNBase.dot_gBar (i,j,k) :=  BSSNBase.dot_gBar (2,j,k);
         BSSNBase.dot_ABar (i,j,k) :=  BSSNBase.dot_ABar (2,j,k);

      end loop;

      for a in beg_back .. end_back loop

         b := back_bndry (a);

         i := grid_point_list (b).i;  -- equals 1
         j := grid_point_list (b).j;
         k := grid_point_list (b).k;

            BSSNBase.dot_N (i,j,k) :=     BSSNBase.dot_N (num_x-1,j,k);
           BSSNBase.dot_Gi (i,j,k) :=    BSSNBase.dot_Gi (num_x-1,j,k);
          BSSNBase.dot_phi (i,j,k) :=   BSSNBase.dot_phi (num_x-1,j,k);
          BSSNBase.dot_trK (i,j,k) :=   BSSNBase.dot_trK (num_x-1,j,k);
         BSSNBase.dot_gBar (i,j,k) :=  BSSNBase.dot_gBar (num_x-1,j,k);
         BSSNBase.dot_ABar (i,j,k) :=  BSSNBase.dot_ABar (num_x-1,j,k);

      end loop;

   end set_time_derivatives_bndry_fb;

   procedure set_time_derivatives
   is
      params : SlaveParams := (1,
                                   1,grid_point_num,
                                   1,interior_num,
                                   1,boundary_num,
                                   1,north_bndry_num,
                                   1,south_bndry_num,
                                   1,east_bndry_num,
                                   1,west_bndry_num,
                                   1,front_bndry_num,
                                   1,back_bndry_num);
   begin

      set_time_derivatives_intr (params);
      set_time_derivatives_bndry_fb (params);
      set_time_derivatives_bndry_ew (params);
      set_time_derivatives_bndry_ns (params);

   end set_time_derivatives;

end BSSNBase.Time_Derivs;
-- end: ./bssnbase-time_derivs.adt
